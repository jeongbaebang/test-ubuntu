name: Deploy Deno Application

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Cache Deno dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.deno
            ~/.cache/deno
          key: ${{ runner.os }}-deno-${{ hashFiles('**/deps.ts') || hashFiles('**/app.ts') || 'default' }}
          restore-keys: |
            ${{ runner.os }}-deno-

      - name: Cache and compile
        run: deno cache --reload app.ts

      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_SSH_HOST }}
          username: ${{ secrets.REMOTE_SSH_USERNAME }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          script: |
            # Git 저장소 설정 및 코드 업데이트
            if [ ! -d "${{ secrets.APP_DIR }}/.git" ]; then
              cd ${{ secrets.APP_DIR }}
              git init
              git remote add origin https://github.com/jeongbaebang/test-ubuntu.git
              git fetch
            fi

            cd ${{ secrets.APP_DIR }}
            git fetch --all
            git reset --hard origin/main

            # .env 파일 생성 및 권한 설정
            echo "PORT=${{ secrets.APP_PORT }}" > .env

            # 환경 변수 설정
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            export DENO_INSTALL="$HOME/.deno"
            export PATH="$DENO_INSTALL/bin:$PATH"

            # 의존성 캐싱
            deno cache --reload app.ts

            pm2 restart deno-app --update-env || pm2 start app.ts --interpreter="deno" --interpreter-args="run --allow-net --allow-env --allow-read" --name "deno-app"

            pm2 save
